generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum InquiryType {
  CONSTRUCTION
  QUOTE
  ETC
}

enum UserStatus {
  REGISTERED
  VISIT
  CONSULTATION
  CONTRACT
  SIGNED
  START
}

model user {
  id       String   @id @default(uuid())
  email    String   @unique
  phone    String   @unique
  username String   @unique
  address  String
  name     String
  password String
  role     UserRole @default(USER)

  userStatus UserStatus @default(REGISTERED)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  inquiry inquiry[]
  booking booking[]

  passwordResetCode passwordResetCode?
  oneTimeUniqueCode oneTimeUniqueCode?
}

model adminSetting {
  id String @id @default(uuid())

  upTo199  String?
  upTo399  String?
  above400 String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model booking {
  id     String @id @default(uuid())
  user   user   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  name     String
  phone    String
  address  String
  reason   String
  pyeong   String
  planDate String

  bookingDate DateTime
  bookingTime String

  confirmedTime        String?
  confirmedBookingDate DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model inquiry {
  id          String      @id @default(uuid())
  userId      String
  user        user        @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  inquiryType InquiryType

  name    String
  phone   String
  title   String
  content String

  attachments attachments[]
}

model passwordResetCode {
  id           String   @id @default(uuid())
  code         String
  user         user     @relation(fields: [userUsername], references: [username], onDelete: Cascade)
  userUsername String   @unique
  createdAt    DateTime @default(now())
}

model attachments {
  id        String   @id @default(uuid())
  inquiryId String
  fileName  String?
  inquiry   inquiry  @relation(fields: [inquiryId], references: [id])
  createdAt DateTime @default(now())
}

model verificationCode {
  id        String   @id @default(uuid())
  code      String
  createdAt DateTime @default(now())
}

model oneTimeUniqueCode {
  id           String   @id @default(uuid())
  user         user     @relation(fields: [userUsername], references: [username], onDelete: Cascade)
  userUsername String   @unique
  createdAt    DateTime @default(now())
}
